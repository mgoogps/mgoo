//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MG_DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class YiwenGPSEntities : DbContext
    {
        public YiwenGPSEntities()
            : base("name=YiwenGPSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminCount> AdminCount { get; set; }
        public virtual DbSet<Apps> Apps { get; set; }
        public virtual DbSet<BuyRecord> BuyRecord { get; set; }
        public virtual DbSet<CarCommandQueue> CarCommandQueue { get; set; }
        public virtual DbSet<DebugData> DebugData { get; set; }
        public virtual DbSet<DevBond> DevBond { get; set; }
        public virtual DbSet<Devices> Devices { get; set; }
        public virtual DbSet<DevicesConfig> DevicesConfig { get; set; }
        public virtual DbSet<DevicesReport> DevicesReport { get; set; }
        public virtual DbSet<DevTest> DevTest { get; set; }
        public virtual DbSet<Dictionary> Dictionary { get; set; }
        public virtual DbSet<ExceptionMessage> ExceptionMessage { get; set; }
        public virtual DbSet<ExceptionMessage_Demo> ExceptionMessage_Demo { get; set; }
        public virtual DbSet<GeoFence> GeoFence { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<LKLocation> LKLocation { get; set; }
        public virtual DbSet<MobileAppInfo> MobileAppInfo { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<POI> POI { get; set; }
        public virtual DbSet<SpeedReport> SpeedReport { get; set; }
        public virtual DbSet<TariffPackages> TariffPackages { get; set; }
        public virtual DbSet<TempLKL> TempLKL { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UsersConfig> UsersConfig { get; set; }
        public virtual DbSet<UserWarnSet> UserWarnSet { get; set; }
        public virtual DbSet<WebURL> WebURL { get; set; }
        public virtual DbSet<WeChatUsers> WeChatUsers { get; set; }
        public virtual DbSet<WeixinUser> WeixinUser { get; set; }
        public virtual DbSet<Devices_bak> Devices_bak { get; set; }
        public virtual DbSet<DeviceShare> DeviceShare { get; set; }
        public virtual DbSet<ExceptionMessage_bak> ExceptionMessage_bak { get; set; }
        public virtual DbSet<ExpiredPushRecord> ExpiredPushRecord { get; set; }
        public virtual DbSet<Users_bak> Users_bak { get; set; }
        public virtual DbSet<ExpiredPush7> ExpiredPush7 { get; set; }
    
        public virtual int ClearExceptionMessage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearExceptionMessage");
        }
    
        public virtual int proc_offLineMessage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_offLineMessage");
        }
    
        public virtual int SendMsgToApplication(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendMsgToApplication", inputParameter);
        }
    
        public virtual int SP_GetHistory(Nullable<int> userID, Nullable<int> deviceID, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> filterWireless, Nullable<int> filterSpeed)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var deviceIDParameter = deviceID.HasValue ?
                new ObjectParameter("DeviceID", deviceID) :
                new ObjectParameter("DeviceID", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var filterWirelessParameter = filterWireless.HasValue ?
                new ObjectParameter("FilterWireless", filterWireless) :
                new ObjectParameter("FilterWireless", typeof(int));
    
            var filterSpeedParameter = filterSpeed.HasValue ?
                new ObjectParameter("FilterSpeed", filterSpeed) :
                new ObjectParameter("FilterSpeed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetHistory", userIDParameter, deviceIDParameter, startTimeParameter, endTimeParameter, filterWirelessParameter, filterSpeedParameter);
        }
    
        public virtual ObjectResult<SP_GetUsersDevicesDetailInfo_ByUserID_Result> SP_GetUsersDevicesDetailInfo_ByUserID(Nullable<int> userID, Nullable<int> typeID, string time, string startTime, string endTime)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUsersDevicesDetailInfo_ByUserID_Result>("SP_GetUsersDevicesDetailInfo_ByUserID", userIDParameter, typeIDParameter, timeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<SP_GetUsersDevicesInfo_ByUserID_Result> SP_GetUsersDevicesInfo_ByUserID(Nullable<int> userID, string startTime, string endTime)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUsersDevicesInfo_ByUserID_Result>("SP_GetUsersDevicesInfo_ByUserID", userIDParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<SP_GetUsersList_ByUserID_Result> SP_GetUsersList_ByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUsersList_ByUserID_Result>("SP_GetUsersList_ByUserID", userIDParameter);
        }
    }
}
